version: "3.8"

services:
  backend:
    container_name: homepage-backend
    build: services/backend
    ports:
      - 5000:5000
    environment:
      - PORT=5000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`${HOMEPAGE_DOMAIN}`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=letsencrypt"
    restart: unless-stopped
  traefik:
    container_name: homepage_traefik
    image: traefik:v3.0
    command:
      # Debugging
      - --log.level=DEBUG
      #- --api.insecure=true
      #- --api.dashboard=true
      # Entrypoints
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      # Providers
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      # Certificate Resolvers
      - --certificatesresolvers.letsencrypt.acme.dnschallenge=true
      - --certificatesresolvers.letsencrypt.acme.dnschallenge.provider=cloudflare
      - "--certificatesresolvers.letsencrypt.acme.email=${LETSENCRYPT_EMAIL}"
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
    environment:
      - "CLOUDFLARE_EMAIL=${CLOUDFLARE_EMAIL}"
      - "CLOUDFLARE_DNS_API_TOKEN=${CLOUDFLARE_TOKEN}"
    ports:
      - 80:80
      - 443:443
      #- 8080:8080
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - traefik_certificates:/letsencrypt
    restart: unless-stopped
  whoami:
    image: "traefik/whoami"
    container_name: simple-service
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`whoami.${HOMEPAGE_DOMAIN}`)"
      - "traefik.http.routers.whoami.entrypoints=websecure"
      - "traefik.http.routers.whoami.tls.certresolver=letsencrypt"

volumes:
  traefik_certificates: